class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k) {
        int n=nums.size(); 
        
        unordered_map<int, int> m; 
        m[0] = 1; 
        int sum=0,ans=0; 
        int rem=0; 
        
        for(int i=0;i<n;i++) 
        {
            sum = sum + nums[i]; 
            rem = sum % k; 
            
            if(rem < 0) 
            {
                rem = rem + k; 
            } 
            if(m[rem]) 
            {
                ans = ans + m[rem]; 
                m[rem]++; 
            } 
            else 
            {
                m[rem] = 1; 
            }
        } 
        return ans; 
    }
}; 

// time complexity : o(n) 
// space complexity : o(n) 
